---
import "@/styles/globals.css";
import { ModeToggle } from "@/components/ModeToggle";
import Navbar from "@/components/Navbar";
import { ViewTransitions } from "astro:transitions";

interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<script is:inline>
const getThemePreference = () => {
	if (
		typeof localStorage !== "undefined" &&
		localStorage.getItem("theme")
	) {
		return localStorage.getItem("theme");
	}
	return window.matchMedia("(prefers-color-scheme: dark)").matches
		? "dark"
		: "light";
};
const isDark = getThemePreference() === "dark";
document.documentElement.classList[isDark ? "add" : "remove"]("dark");

if (typeof localStorage !== "undefined") {
	const observer = new MutationObserver(() => {
		const isDark = document.documentElement.classList.contains("dark");
		localStorage.setItem("theme", isDark ? "dark" : "light");
	});
	observer.observe(document.documentElement, {
		attributes: true,
		attributeFilter: ["class"],
	});
}
</script>

<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />

		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<link
			href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap"
			rel="stylesheet"
		/>
		<ViewTransitions />
		<title>{title}</title>
	</head>
	<body>
		<Navbar client:load />
		<slot />
		<style>
			body {
				font-family: "Roboto", sans-serif;
			}
		</style>
	</body>
</html>
